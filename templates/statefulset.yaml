---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.nameOverride }}
  labels:
    {{- include "ethereum.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Values.nameOverride }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ethereum.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ethereum.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: primary
    spec:
      containers:
      - name: clef
        image: {{ .Values.image.clef.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        volumeMounts:
        - name: {{ .Values.persistence.name }}
          mountPath: /srv/ethereum
        - name: jwt
          mountPath: /srv/ethereum/jwt
      - name: geth
        image: {{ .Values.image.execution.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8545
        - containerPort: 8551
        volumeMounts:
        - name: {{ .Values.persistence.name }}
          mountPath: /srv/ethereum
        - name: jwt
          mountPath: /srv/ethereum/jwt
      - name: prysm
        env:
          - name: USE_PRYSM_VERSION
            value: v5.0.0
          - name: GNUPGHOME
            value: /srv/ethereum/consensus/.gnupg
        # command:
        #   - '/usr/bin/prism-beacon-chain'
        # args:
        #   ["--accept-terms-of-use", "--datadir=/srv/ethereum/consensus", "--execution-endpoint=http://localhost:8551", "--mainnet", "--checkpoint-sync-url=https://beaconstate.info", "--genesis-beacon-api-url=https://beaconstate.info"]
        image: {{ .Values.image.consensus.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
        volumeMounts:
        - name: {{ .Values.persistence.name }}
          mountPath: /srv/ethereum
        - name: jwt
          mountPath: /srv/ethereum/jwt
      volumes:
      - name: {{ .Values.persistence.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.name }}
      - name: jwt
        secret:
          secretName: ethereum
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.persistence.name }}
    spec:
      accessModes: [ "ReadWriteMany", "ReadWriteOnce" ]
      resources:
        limits:
          storage: {{ .Values.resources.limits.storage }}
        requests:
          storage: {{ .Values.resources.requests.storage }}
      storageClassName: {{ .Values.persistence.storageClass }}
      volumeMode: Filesystem
